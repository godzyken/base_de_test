// Mocks generated by Mockito 5.3.2 from annotations
// in base_de_test/test/features/transactions/application/datasource/repository/boats_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:base_de_test/features/transactions/application/datasource/database/source_base.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [SourceBase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSourceBase extends _i1.Mock implements _i2.SourceBase {
  MockSourceBase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<Map<String, dynamic>>> allBoats() => (super.noSuchMethod(
        Invocation.method(
          #allBoats,
          [],
        ),
        returnValue: _i3.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i3.Future<List<Map<String, dynamic>>>);
  @override
  _i3.Future<List<Map<String, dynamic>>> allOwners() => (super.noSuchMethod(
        Invocation.method(
          #allOwners,
          [],
        ),
        returnValue: _i3.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i3.Future<List<Map<String, dynamic>>>);
  @override
  _i3.Future<List<Map<String, dynamic>>> allAddress() => (super.noSuchMethod(
        Invocation.method(
          #allAddress,
          [],
        ),
        returnValue: _i3.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i3.Future<List<Map<String, dynamic>>>);
  @override
  _i3.Future<Map<String, dynamic>> insertBoat(
          Map<String, dynamic>? boatEntity) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertBoat,
          [boatEntity],
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);
  @override
  _i3.Future<Map<String, dynamic>> insertOwner(
          Map<String, dynamic>? ownerEntity) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertOwner,
          [ownerEntity],
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);
  @override
  _i3.Future<Map<String, dynamic>> insertAddress(
          Map<String, dynamic>? addressEntity) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertAddress,
          [addressEntity],
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);
  @override
  _i3.Future<void> updateBoat(Map<String, dynamic>? boatEntity) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateBoat,
          [boatEntity],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> updateOwner(Map<String, dynamic>? ownerEntity) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateOwner,
          [ownerEntity],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> updateAddress(Map<String, dynamic>? addressEntity) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAddress,
          [addressEntity],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<int> deleteBoat(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteBoat,
          [id],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);
  @override
  _i3.Future<int> deleteOwner(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteOwner,
          [id],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);
  @override
  _i3.Future<int> deleteAddress(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteAddress,
          [id],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);
  @override
  _i3.Future<int> deleteAllBoat() => (super.noSuchMethod(
        Invocation.method(
          #deleteAllBoat,
          [],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);
  @override
  _i3.Future<dynamic> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);
}

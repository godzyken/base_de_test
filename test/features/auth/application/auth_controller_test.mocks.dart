// Mocks generated by Mockito 5.3.2 from annotations
// in base_de_test/test/features/auth/application/auth_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:base_de_test/features/auth/domain/entities/user/user_entity.dart'
    as _i6;
import 'package:base_de_test/features/auth/infrastructure/datasources/local/auth_token_local_data_source.dart'
    as _i2;
import 'package:base_de_test/features/auth/infrastructure/repositories/auth_repository.dart'
    as _i5;
import 'package:base_de_test/features/common/domain/failures/failure.dart'
    as _i8;
import 'package:fpdart/fpdart.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:supabase_flutter/supabase_flutter.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthTokenLocalDataSource_0 extends _i1.SmartFake
    implements _i2.AuthTokenLocalDataSource {
  _FakeAuthTokenLocalDataSource_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGoTrueClient_1 extends _i1.SmartFake implements _i3.GoTrueClient {
  _FakeGoTrueClient_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_2<L, R> extends _i1.SmartFake implements _i4.Either<L, R> {
  _FakeEither_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i5.AuthRepository {
  @override
  _i2.AuthTokenLocalDataSource get authTokenLocalDataSource =>
      (super.noSuchMethod(
        Invocation.getter(#authTokenLocalDataSource),
        returnValue: _FakeAuthTokenLocalDataSource_0(
          this,
          Invocation.getter(#authTokenLocalDataSource),
        ),
        returnValueForMissingStub: _FakeAuthTokenLocalDataSource_0(
          this,
          Invocation.getter(#authTokenLocalDataSource),
        ),
      ) as _i2.AuthTokenLocalDataSource);
  @override
  _i3.GoTrueClient get authClient => (super.noSuchMethod(
        Invocation.getter(#authClient),
        returnValue: _FakeGoTrueClient_1(
          this,
          Invocation.getter(#authClient),
        ),
        returnValueForMissingStub: _FakeGoTrueClient_1(
          this,
          Invocation.getter(#authClient),
        ),
      ) as _i3.GoTrueClient);
  @override
  void authStateChange(void Function(_i6.UserEntity?)? callback) =>
      super.noSuchMethod(
        Invocation.method(
          #authStateChange,
          [callback],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.Future<_i4.Either<_i8.Failure, _i6.UserEntity>> restoreSession() =>
      (super.noSuchMethod(
        Invocation.method(
          #restoreSession,
          [],
        ),
        returnValue: _i7.Future<_i4.Either<_i8.Failure, _i6.UserEntity>>.value(
            _FakeEither_2<_i8.Failure, _i6.UserEntity>(
          this,
          Invocation.method(
            #restoreSession,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.Either<_i8.Failure, _i6.UserEntity>>.value(
                _FakeEither_2<_i8.Failure, _i6.UserEntity>(
          this,
          Invocation.method(
            #restoreSession,
            [],
          ),
        )),
      ) as _i7.Future<_i4.Either<_i8.Failure, _i6.UserEntity>>);
  @override
  _i7.Future<_i4.Either<_i8.Failure, _i6.UserEntity>> setSession(
          String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSession,
          [token],
        ),
        returnValue: _i7.Future<_i4.Either<_i8.Failure, _i6.UserEntity>>.value(
            _FakeEither_2<_i8.Failure, _i6.UserEntity>(
          this,
          Invocation.method(
            #setSession,
            [token],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.Either<_i8.Failure, _i6.UserEntity>>.value(
                _FakeEither_2<_i8.Failure, _i6.UserEntity>(
          this,
          Invocation.method(
            #setSession,
            [token],
          ),
        )),
      ) as _i7.Future<_i4.Either<_i8.Failure, _i6.UserEntity>>);
  @override
  _i7.Future<_i4.Either<_i8.Failure, _i6.UserEntity>> signUp(
    String? email,
    String? username,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [
            email,
            username,
            password,
          ],
        ),
        returnValue: _i7.Future<_i4.Either<_i8.Failure, _i6.UserEntity>>.value(
            _FakeEither_2<_i8.Failure, _i6.UserEntity>(
          this,
          Invocation.method(
            #signUp,
            [
              email,
              username,
              password,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.Either<_i8.Failure, _i6.UserEntity>>.value(
                _FakeEither_2<_i8.Failure, _i6.UserEntity>(
          this,
          Invocation.method(
            #signUp,
            [
              email,
              username,
              password,
            ],
          ),
        )),
      ) as _i7.Future<_i4.Either<_i8.Failure, _i6.UserEntity>>);
  @override
  _i7.Future<_i4.Either<_i8.Failure, _i6.UserEntity>> signInWithPassword(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithPassword,
          [
            email,
            password,
          ],
        ),
        returnValue: _i7.Future<_i4.Either<_i8.Failure, _i6.UserEntity>>.value(
            _FakeEither_2<_i8.Failure, _i6.UserEntity>(
          this,
          Invocation.method(
            #signInWithPassword,
            [
              email,
              password,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.Either<_i8.Failure, _i6.UserEntity>>.value(
                _FakeEither_2<_i8.Failure, _i6.UserEntity>(
          this,
          Invocation.method(
            #signInWithPassword,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i7.Future<_i4.Either<_i8.Failure, _i6.UserEntity>>);
  @override
  _i7.Future<_i4.Either<_i8.Failure, bool>> signInWithGoogle() =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithGoogle,
          [],
        ),
        returnValue: _i7.Future<_i4.Either<_i8.Failure, bool>>.value(
            _FakeEither_2<_i8.Failure, bool>(
          this,
          Invocation.method(
            #signInWithGoogle,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.Either<_i8.Failure, bool>>.value(
                _FakeEither_2<_i8.Failure, bool>(
          this,
          Invocation.method(
            #signInWithGoogle,
            [],
          ),
        )),
      ) as _i7.Future<_i4.Either<_i8.Failure, bool>>);
  @override
  _i7.Future<_i4.Either<_i8.Failure, bool>> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i7.Future<_i4.Either<_i8.Failure, bool>>.value(
            _FakeEither_2<_i8.Failure, bool>(
          this,
          Invocation.method(
            #signOut,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.Either<_i8.Failure, bool>>.value(
                _FakeEither_2<_i8.Failure, bool>(
          this,
          Invocation.method(
            #signOut,
            [],
          ),
        )),
      ) as _i7.Future<_i4.Either<_i8.Failure, bool>>);
}
